name: Scheduled releases of end user packages

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:
    inputs:
      library:
        description: "Library to build and test."
  workflow_call:
    inputs:
      library:
        description: "Library to build and test"
        type: string

jobs:
  # FEniCS/real build
  build_fenics_real:
    if: github.repository == 'numericalpdes/docker' && (github.event_name == 'schedule' || (inputs || github.event.inputs).library == '' || (inputs || github.event.inputs).library == 'fenics')
    uses: numericalpdes/docker/.github/workflows/release.yml@main
    with:
      library: "fenics"
      args: "real"

  # FEniCSx/real build
  build_fenicsx_real:
    if: github.repository == 'numericalpdes/docker' && (github.event_name == 'schedule' || (inputs || github.event.inputs).library == '' || (inputs || github.event.inputs).library == 'fenicsx')
    uses: numericalpdes/docker/.github/workflows/release.yml@main
    with:
      library: "fenicsx"
      args: "real"

  # FEniCSx/complex build
  build_fenicsx_complex:
    if: github.repository == 'numericalpdes/docker' && (github.event_name == 'schedule' || (inputs || github.event.inputs).library == '' || (inputs || github.event.inputs).library == 'fenicsx')
    uses: numericalpdes/docker/.github/workflows/release.yml@main
    with:
      library: "fenicsx"
      args: "complex"

  # Firedrake/real build
  build_firedrake_real:
    if: github.repository == 'numericalpdes/docker' && (github.event_name == 'schedule' || (inputs || github.event.inputs).library == '' || (inputs || github.event.inputs).library == 'firedrake')
    uses: numericalpdes/docker/.github/workflows/release.yml@main
    with:
      library: "firedrake"
      args: "real"

  # Firedrake/complex build
  build_firedrake_complex:
    if: github.repository == 'numericalpdes/docker' && (github.event_name == 'schedule' || (inputs || github.event.inputs).library == '' || (inputs || github.event.inputs).library == 'firedrake')
    uses: numericalpdes/docker/.github/workflows/release.yml@main
    with:
      library: "firedrake"
      args: "complex"

  # Gmsh build
  build_gmsh:
    if: github.repository == 'numericalpdes/docker' && (github.event_name == 'schedule' || (inputs || github.event.inputs).library == '' || (inputs || github.event.inputs).library == 'gmsh')
    uses: numericalpdes/docker/.github/workflows/release.yml@main
    with:
      library: "gmsh"
      args: ""

  # NGSolve/real build
  build_ngsolve_real:
    if: github.repository == 'numericalpdes/docker' && (github.event_name == 'schedule' || (inputs || github.event.inputs).library == '' || (inputs || github.event.inputs).library == 'ngsolve')
    uses: numericalpdes/docker/.github/workflows/release.yml@main
    with:
      library: "ngsolve"
      args: "real"

  # NGSolve/complex build
  build_ngsolve_complex:
    if: github.repository == 'numericalpdes/docker' && (github.event_name == 'schedule' || (inputs || github.event.inputs).library == '' || (inputs || github.event.inputs).library == 'ngsolve')
    uses: numericalpdes/docker/.github/workflows/release.yml@main
    with:
      library: "ngsolve"
      args: "complex"

  # numericalpdes/real build
  build_numericalpdes_real:
    needs: [build_fenicsx_real, build_firedrake_real, build_gmsh, build_ngsolve_real]
    if: >-
      github.repository == 'numericalpdes/docker' && (
        (
          github.event_name == 'schedule' && needs.build_fenicsx_real.result == 'success' && needs.build_firedrake_real.result == 'success' && needs.build_gmsh.result == 'success' && needs.build_ngsolve_real.result == 'success'
        ) || (
          github.event_name != 'schedule' && (needs.build_fenicsx_real.result == 'skipped' || needs.build_fenicsx_real.result == 'success') && (needs.build_firedrake_real.result == 'skipped' || needs.build_firedrake_real.result == 'success') && (needs.build_gmsh.result == 'skipped' || needs.build_gmsh.result == 'success') && (needs.build_ngsolve_real.result == 'skipped' || needs.build_ngsolve_real.result == 'success') && (needs.build_fenicsx_real.result == 'success' || needs.build_firedrake_real.result == 'success' || needs.build_gmsh.result == 'success' || needs.build_ngsolve_real.result == 'success') && always() && !cancelled()
        )
      )
    uses: numericalpdes/docker/.github/workflows/combine_end_user.yml@main
    with:
      scalar-type: "real"
    secrets:
      WEB_USER: ${{ secrets.WEB_USER }}
      WEB_SSH_PRIVATE_KEY: ${{ secrets.WEB_SSH_PRIVATE_KEY }}
      WEB_SERVER: ${{ secrets.WEB_SERVER }}
      WEB_HOME: ${{ secrets.WEB_HOME }}
      WEB_URL: ${{ secrets.WEB_URL }}

  # numericalpdes/complex build
  build_numericalpdes_complex:
    needs: [build_fenicsx_complex, build_firedrake_complex, build_gmsh, build_ngsolve_complex]
    if: >-
      github.repository == 'numericalpdes/docker' && (
        (
          github.event_name == 'schedule' && needs.build_fenicsx_complex.result == 'success' && needs.build_firedrake_complex.result == 'success' && needs.build_gmsh.result == 'success' && needs.build_ngsolve_complex.result == 'success'
        ) || (
          github.event_name != 'schedule' && (needs.build_fenicsx_complex.result == 'skipped' || needs.build_fenicsx_complex.result == 'success') && (needs.build_firedrake_complex.result == 'skipped' || needs.build_firedrake_complex.result == 'success') && (needs.build_gmsh.result == 'skipped' || needs.build_gmsh.result == 'success') && (needs.build_ngsolve_complex.result == 'skipped' || needs.build_ngsolve_complex.result == 'success') && (needs.build_fenicsx_complex.result == 'success' || needs.build_firedrake_complex.result == 'success' || needs.build_gmsh.result == 'success' || needs.build_ngsolve_complex.result == 'success') && always() && !cancelled()
        )
      )
    uses: numericalpdes/docker/.github/workflows/combine_end_user.yml@main
    with:
      scalar-type: "complex"
    secrets:
      WEB_USER: ${{ secrets.WEB_USER }}
      WEB_SSH_PRIVATE_KEY: ${{ secrets.WEB_SSH_PRIVATE_KEY }}
      WEB_SERVER: ${{ secrets.WEB_SERVER }}
      WEB_HOME: ${{ secrets.WEB_HOME }}
      WEB_URL: ${{ secrets.WEB_URL }}

  # Warn if scheduled workflow is about to be disabled
  warn:
    runs-on: ubuntu-latest
    if: github.repository == 'numericalpdes/docker' && github.ref == 'refs/heads/main' && github.event_name == 'schedule'
    steps:
      - name: Warn if scheduled workflow is about to be disabled
        uses: fem-on-colab/warn-workflow-about-to-be-disabled-action@main
        with:
          workflow-filename: schedule_end_user.yml
          days-elapsed: 50
